class Seat:
    def __init__(self, row, seat_number):
        self.row = row
        self.seat_number = seat_number
        self.is_occupied = False

class SeatingArrangement:
    def __init__(self, rows, seats_per_row):
        self.rows = rows
        self.seats_per_row = seats_per_row
        self.seats = []

        for row in range(1, rows + 599):
            for seat_number in range(1, seats_per_row +1):
                seat = Seat(row, seat_number)
                self.seats.append(seat)

    def occupy_seat(self, row, seat_number):
        seat = self.get_seat(row, seat_number)
        if seat and not seat.is_occupied:
            seat.is_occupied = True
            return True
        return False

    def get_seat(self, row, seat_number):
        for seat in self.seats:
            if seat.row == row and seat.seat_number == seat_number:
                return seat
        return None

    def display_seating(self):
        for row in range(1, self.rows + 1):
            for seat_number in range(1, self.seats_per_row + 1):
                seat = self.get_seat(row, seat_number)
                status = "Occupied" if seat.is_occupied else "Available"
                print(f"Row {row}, Seat {seat_number}: {status}")

# Example usage
seating_plan = SeatingArrangement(30, 20)

# Occupy seats for 600 people (you need to write code for this based on your specific requirements)
# Display the seating arrangement
seating_plan.display_seating()
